using Nest;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Text;

namespace BusinessLibrary.Models
{
    public class Librarian
    {

        #region Contructors

        /// <summary>
        /// Default constructor. 
        /// Need for serialization purposes.
        /// </summary>
        public Librarian()
        {
        }

        /// <summary>
        /// Fields constructor.
        /// </summary>
        public Librarian(string employee_id, string phone_no, string firstName, string lastName, string address, string social_insurance_no, string library_address, string password)
        {
            Employee_id = employee_id;
            FirstName = firstName;
            LastName = lastName;
            Phone_no = phone_no;
            Address = address;
            Social_insurance_no = social_insurance_no;
            Library_address = library_address;
            Password = password;

        }

        /// <summary>
        /// Clone/Copy constructor.
        /// </summary>
        /// <param name="instance">The object to clone from.</param>
        public Librarian(Librarian instance)
            : this(instance.Employee_id, instance.FirstName, instance.LastName, instance.Phone_no, instance.Address, instance.Social_insurance_no, instance.Library_address, instance.Password)
        {
        }

        #endregion

        #region Properties

        /// <summary>
        /// CardId generated by our system upon creation of a new instance.
        /// </summary>
        [JsonProperty(PropertyName = "employee_id")]
        public string Employee_id { get; set; }

        /// <summary>
        /// First name of the customer.
        /// </summary>
        [JsonProperty(PropertyName = "first_name")]
        public string FirstName { get; set; }

        /// <summary>
        /// Last name of the customer.
        /// </summary>
        [JsonProperty(PropertyName = "last_name")]
        public string LastName { get; set; }

        /// <summary>
        /// Password of the customer.
        /// </summary>
        [JsonProperty(PropertyName = "phone_no")]
        public string Phone_no { get; set; }

        /// <summary>
        /// Address of the customer.
        /// </summary>
        [JsonProperty(PropertyName = "address")]
        public string Address { get; set; }

        /// <summary>
        /// Date of birth of the customer.
        /// </summary>
        [JsonProperty(PropertyName = "social_insurance_no")]
        public string Social_insurance_no { get; set; }

        /// <summary>
        /// FUll name of the customer.
        /// </summary>
        [JsonProperty(PropertyName = "library_address")]
        public string Library_address { get; set; }

        /// <summary>
        /// FUll name of the customer.
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        [JsonProperty(PropertyName = "full_name")]
        public string FullName
        {
            get
            {
                return string.Format("{0} {1}", FirstName, LastName);
            }
        }

        #endregion

        #region Methods

        /// <summary>
        /// Overrides the .ToString method.
        /// </summary>
        public override string ToString()
        {
            return FullName;
        }

        #endregion

    }
}